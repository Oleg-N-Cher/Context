From: <Saved by Blink>
Snapshot-Content-Location: http://www.avhohlov.narod.ru/p1840ru.htm
Subject: =?utf-8?Q?=D0=95=D1=89=D0=B5=20=D0=BE=D0=B4=D0=B8=D0=BD=20=D0=BF=D1=80=D0?=
 =?utf-8?Q?=BE=D1=81=D1=82=D0=BE=D0=B9=20=D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0?=
 =?utf-8?Q?=BB=D1=8F=D1=82=D0=BE=D1=80=20=D0=B4=D0=BB=D1=8F=20PDP-11?=
Date: Tue, 20 Feb 2024 01:31:52 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--iuRrG5bpiFSzLfauicwEgLuv3caqjR4bxi3s9Nnqqa----"


------MultipartBoundary--iuRrG5bpiFSzLfauicwEgLuv3caqjR4bxi3s9Nnqqa----
Content-Type: text/html
Content-ID: <frame-34E16C84E40FA31B45F6049DE048999F@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.avhohlov.narod.ru/p1840ru.htm

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8">
=09
=09



<title>
=D0=95=D1=89=D0=B5 =D0=BE=D0=B4=D0=B8=D0=BD =D0=BF=D1=80=D0=BE=D1=81=D1=82=
=D0=BE=D0=B9 =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=D0=BE=D1=80 =
=D0=B4=D0=BB=D1=8F PDP-11
</title>
</head>
<body>
<table border=3D"0"><tbody><tr><td valign=3D"TOP"><b><font color=3D"BLUE">=
=D0=A1=D1=82=D1=80=D0=B0=D0=BD=D0=B8=D1=86=D0=B0&nbsp;<br>=D0=90=D0=BD=D0=
=B4=D1=80=D0=B5=D1=8F&nbsp;<br>=D0=A5=D0=BE=D1=85=D0=BB=D0=BE=D0=B2=D0=B0&n=
bsp;<br></font></b></td><td valign=3D"TOP"><a href=3D"http://www.avhohlov.n=
arod.ru/index.htm"><nobr>=D0=9D=D0=B0=D1=87=D0=B0=D0=BB=D0=BE</nobr></a></t=
d><td valign=3D"TOP">|</td><td valign=3D"TOP"><a href=3D"http://www.avhohlo=
v.narod.ru/p0010ru.htm"><nobr>=D0=A1=D0=BE=D0=B4=D0=B5=D1=80=D0=B6=D0=B0=D0=
=BD=D0=B8=D0=B5</nobr></a></td><td valign=3D"TOP">|</td><td valign=3D"TOP">=
<a href=3D"http://www.avhohlov.narod.ru/p9800ru.htm"><nobr>=D0=AF=D0=B7=D1=
=8B=D0=BA Context</nobr></a></td><td valign=3D"TOP">|</td><td valign=3D"TOP=
"><a href=3D"http://www.avhohlov.narod.ru/p9900ru.htm"><nobr>=D0=A1=D1=81=
=D1=8B=D0=BB=D0=BA=D0=B8</nobr></a></td><td valign=3D"TOP">|</td><td valign=
=3D"TOP"><a href=3D"http://www.narod.ru/guestbook/?owner=3D85596"><nobr>=D0=
=93=D0=BE=D1=81=D1=82=D0=B5=D0=B2=D0=B0=D1=8F =D0=BA=D0=BD=D0=B8=D0=B3=D0=
=B0</nobr></a></td><td valign=3D"TOP">|</td><td valign=3D"TOP"><a href=3D"h=
ttp://www.avhohlov.narod.ru/p9990ru.htm"><nobr>=D0=90=D0=B2=D1=82=D0=BE=D1=
=80</nobr></a></td><td valign=3D"TOP">|</td><td valign=3D"TOP"><form name=
=3D"LangForm" method=3D"GET"><select name=3D"LangSel"><option value=3D"" se=
lected=3D"">Language</option><option value=3D"en">English</option><option v=
alue=3D"ru">Russian</option></select></form></td></tr></tbody></table><hr>
<center><h3>=D0=95=D1=89=D0=B5 =D0=BE=D0=B4=D0=B8=D0=BD =D0=BF=D1=80=D0=BE=
=D1=81=D1=82=D0=BE=D0=B9 =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=
=D0=BE=D1=80 =D0=B4=D0=BB=D1=8F PDP-11</h3></center>
<p>
=D0=9F=D1=80=D0=B8=D0=B2=D0=B5=D0=B4=D0=B5=D0=BD=D0=BD=D1=8B=D0=B9 =D0=B7=
=D0=B4=D0=B5=D1=81=D1=8C =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=
=D0=BE=D1=80 =D1=8F=D0=B7=D1=8B=D0=BA=D0=B0 TinyContext =D1=8F=D0=B2=D0=BB=
=D1=8F=D0=B5=D1=82=D1=81=D1=8F =D0=B0=D0=BD=D0=B0=D0=BB=D0=BE=D0=B3=D0=BE=
=D0=BC
<a href=3D"http://www.avhohlov.narod.ru/p1800ru.htm">=D0=BA=D0=BE=D0=BC=D0=
=BF=D0=B8=D0=BB=D1=8F=D1=82=D0=BE=D1=80=D0=B0 =D0=B4=D0=BB=D1=8F MS-DOS</a>=
 =D0=B8 =D0=BC=D0=BE=D0=B6=D0=B5=D1=82 =D0=B1=D1=8B=D1=82=D1=8C =D1=81=D0=
=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D0=B8=D1=80=D0=BE=D0=B2=D0=B0=D0=BD
=D1=81 =D0=B5=D0=B3=D0=BE =D0=BF=D0=BE=D0=BC=D0=BE=D1=89=D1=8C=D1=8E. =D0=
=94=D0=BB=D1=8F =D1=8D=D1=82=D0=BE=D0=B3=D0=BE =D0=BD=D1=83=D0=B6=D0=BD=D0=
=BE =D0=B7=D0=B0=D0=BC=D0=B5=D0=BD=D0=B8=D1=82=D1=8C =D0=B2=D1=81=D0=B5 =D1=
=84=D1=83=D0=BD=D0=BA=D1=86=D0=B8=D0=B8 =D0=B2=D0=B2=D0=BE=D0=B4=D0=B0-=D0=
=B2=D1=8B=D0=B2=D0=BE=D0=B4=D0=B0 =D0=BE=D1=82 open()
=D0=B4=D0=BE halt() =D0=B8=D1=85 <a href=3D"http://www.avhohlov.narod.ru/p1=
840ru.htm#int21">=D0=B0=D0=BD=D0=B0=D0=BB=D0=BE=D0=B3=D0=B0=D0=BC=D0=B8</a>=
, =D1=83=D0=B2=D0=B5=D0=BB=D0=B8=D1=87=D0=B8=D1=82=D1=8C =D1=80=D0=B0=D0=B7=
=D0=BC=D0=B5=D1=80 =D0=BC=D0=B0=D1=81=D1=81=D0=B8=D0=B2=D0=B0 Text
c 2048 =D1=81=D0=B8=D0=BC=D0=B2=D0=BE=D0=BB=D0=BE=D0=B2 =D0=B4=D0=BE 16384 =
=D1=81=D0=B8=D0=BC=D0=B2=D0=BE=D0=BB=D0=BE=D0=B2 (=D0=AD=D0=A2=D0=9E =D0=92=
=D0=90=D0=96=D0=9D=D0=9E!) =D0=B8 =D0=BF=D0=BE=D0=BB=D1=83=D1=87=D0=B8=D1=
=82=D1=8C =D1=80=D0=B0=D0=B1=D0=BE=D1=82=D0=B0=D1=8E=D1=89=D0=B8=D0=B9 =D0=
=B2 =D1=81=D1=80=D0=B5=D0=B4=D0=B5
MS-DOS =D0=BA=D1=80=D0=BE=D1=81=D1=81-=D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=
=D1=8F=D1=82=D0=BE=D1=80. =D0=97=D0=B0=D1=82=D0=B5=D0=BC =D1=81 =D0=B5=D0=
=B3=D0=BE =D0=BF=D0=BE=D0=BC=D0=BE=D1=89=D1=8C=D1=8E =D0=BF=D0=BE=D0=BB=D1=
=83=D1=87=D0=B8=D1=82=D1=8C =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=
=82=D0=BE=D1=80, =D1=80=D0=B0=D0=B1=D0=BE=D1=82=D0=B0=D1=8E=D1=89=D0=B8=D0=
=B9 =D0=BD=D0=B0
PDP-11 =D0=B1=D0=B5=D0=B7 =D0=BE=D0=BF=D0=B5=D1=80=D0=B0=D1=86=D0=B8=D0=BE=
=D0=BD=D0=BD=D0=BE=D0=B9 =D1=81=D0=B8=D1=81=D1=82=D0=B5=D0=BC=D1=8B. =D0=94=
=D0=BB=D1=8F =D1=82=D0=B5=D1=81=D1=82=D0=B8=D1=80=D0=BE=D0=B2=D0=B0=D0=BD=
=D0=B8=D1=8F =D0=B8=D1=81=D0=BF=D0=BE=D0=BB=D1=8C=D0=B7=D0=BE=D0=B2=D0=B0=
=D0=BB=D1=81=D1=8F =D1=8D=D0=BC=D1=83=D0=BB=D1=8F=D1=82=D0=BE=D1=80 simhv/p=
dp11
(PDP-11/05 =D1=81 =D0=BE=D0=BF=D0=B5=D1=80=D0=B0=D1=82=D0=B8=D0=B2=D0=BD=D0=
=BE=D0=B9 =D0=BF=D0=B0=D0=BC=D1=8F=D1=82=D1=8C=D1=8E 48=D0=9A=D0=B1). =D0=
=9A=D0=BE=D0=B4 =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=D0=BE=D1=
=80=D0=B0 =D0=B8 =D0=B8=D1=81=D1=85=D0=BE=D0=B4=D0=BD=D1=8B=D0=B9 =D1=82=D0=
=B5=D0=BA=D1=81=D1=82 =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D0=B8=D1=80=D1=
=83=D0=B5=D0=BC=D0=BE=D0=B9
=D0=BF=D1=80=D0=BE=D0=B3=D1=80=D0=B0=D0=BC=D0=BC=D1=8B =D0=B4=D0=BE=D0=BB=
=D0=B6=D0=BD=D1=8B =D1=80=D0=B0=D0=B7=D0=BC=D0=B5=D1=89=D0=B0=D1=82=D1=8C=
=D1=81=D1=8F =D0=BD=D0=B0 =D0=BF=D0=B5=D1=80=D1=84=D0=BE=D0=BB=D0=B5=D0=BD=
=D1=82=D0=B0=D1=85, =D1=80=D0=B5=D0=B7=D1=83=D0=BB=D1=8C=D1=82=D0=B0=D1=82 =
=D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=86=D0=B8=D0=B8 =D1=82=D0=B0=
=D0=BA=D0=B6=D0=B5 =D0=B2=D1=8B=D0=B2=D0=BE=D0=B4=D0=B8=D1=82=D1=81=D1=8F
=D0=BD=D0=B0 =D0=BF=D0=B5=D1=80=D1=84=D0=BE=D0=BB=D0=B5=D0=BD=D1=82=D1=83 (=
=D0=B2 =D1=81=D1=80=D0=B5=D0=B4=D0=B5 =D1=8D=D0=BC=D1=83=D0=BB=D1=8F=D1=82=
=D0=BE=D1=80=D0=B0 =D0=BF=D0=B5=D1=80=D1=84=D0=BE=D0=BB=D0=B5=D0=BD=D1=82=
=D1=8B =D0=B8=D0=BC=D0=B8=D1=82=D0=B8=D1=80=D1=83=D1=8E=D1=82=D1=81=D1=8F =
=D1=84=D0=B0=D0=B9=D0=BB=D0=B0=D0=BC=D0=B8).
</p><p>
=D0=98=D1=81=D1=85=D0=BE=D0=B4=D0=BD=D1=8B=D0=B9 =D1=82=D0=B5=D0=BA=D1=81=
=D1=82 =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=D0=BE=D1=80=D0=B0:
</p><p>
</p><xmp>
  char  Text  [ 2048];
  word pText;
  word nText;
  word nLine;

  word  Code  [ 8192];
  word nCode;

  word hFile;

  char  Heap  [ 2048];
  word nHeap;

  word  Name  [  256];
  word  Cls   [  256];
  word  Sub   [  256];
  word  Type  [  256];
  word  Size  [  256];
  word  Ofs   [  256];
  word nName;

  word nData;

  word  Stk   [  128];
  word pStk;

  char  Buff  [  128];


  word  mul (word A, word B) is
    word  M:=3D0;
    while B >0 do
      word  T  :=3DA;
      word  I  :=3D1;
      while B-I>=3DI do
        T:=3DT+T;
        I:=3DI+I;
      end

      M:=3DM+T;
      B:=3DB-I;
    end

    return M;
  end


  word  div (word A, word B) is
    word  D:=3D0;
    while A>=3DB do
      word  T  :=3DB;
      word  I  :=3D1;
      while A-T>=3DT do
        T:=3DT+T;
        I:=3DI+I;
      end

      A:=3DA-T;
      D:=3DD+I;
    end

    return D;
  end


  word  mod (word A, word B) is
    return A-mul(div(A,B),B);
  end


  word  open() is
    return 0;
  end


  word  create() is
    return 0;
  end


  word  getc() is
    inline 0x15C1, 0xFF68;   // 012701 177550 // mov  #TRS, R1
    inline 0x0A89;           // 005211        // inc  (R1)
    inline 0x35C9, 0x8080;   // 032711 100200 // bit  #100200, (R1)
    inline 0x8104;           // 100404        // bmi
    inline 0x03FC;           // 001774        // beq
    inline 0x9C40, 0x0002;   // 116100 000002 // movb 2(R1), R0
    inline 0x0102;           // 000402        // br
    inline 0x15C0, 0xFF00;   // 012700 177400 // mov  #ERR, R0
  end


  word  read() is
    word  P:=3D0;
    word  W:=3Dgetc();
    while W!=3D0xFF00 do
      Text[P]:=3Dchar(W);
      P      :=3DP+1;
      if   P>=3D2048 then
        return P;
      end

      W:=3Dgetc();
    end

    return     P;
  end


  char  punch(word B) is
    word   B1:=3DB;
    inline 0x15C1, 0xFF6C;   // 012701 177554 // mov  #TPS, R1
    inline 0x9031, 0x0002;   // 110061 000002 // movb R0, 2(R1)
    inline 0x15C0, 0x0000;   // 012700 000000 // mov  #0, R0
    inline 0x35C9, 0x8080;   // 032711 100200 // bit  #100200, (R1)
    inline 0x8102;           // 100402        // bmi
    inline 0x03FC;           // 001774        // beq
    inline 0x0102;           // 000402        // br
    inline 0x15C0, 0x0001;   // 012700 000001 // mov  #1, R0
  end


  word  write() is
    word  pCode:=3D0;
    while pCode<nCode do
      punch(mod(Code[pCode],256));
      punch(div(Code[pCode],256));

      pCode:=3DpCode+1;
    end
  end


  word  close() is
    return 0;
  end


  char  putc(char C) is
    char   C1:=3DC;
    inline 0x15C1, 0xFF74;   // 012701 177564 // mov  #serial, R1
    inline 0x9031, 0x0002;   // 110061 000002 // movb R0, 2(R1)
    inline 0x8BC9;           // 105711        // tstb (R1)
    inline 0x80FE;           // 100376        // bpl
  end


  word  halt() is
    inline 0x0000;
  end


  word  Init() is
    Heap[ 0]:=3D'0';
    Heap[ 1]:=3D'1';
    Heap[ 2]:=3D'2';
    Heap[ 3]:=3D'3';
    Heap[ 4]:=3D'4';
    Heap[ 5]:=3D'5';
    Heap[ 6]:=3D'6';
    Heap[ 7]:=3D'7';
    Heap[ 8]:=3D'8';
    Heap[ 9]:=3D'9';
    Heap[10]:=3D'A';
    Heap[11]:=3D'B';
    Heap[12]:=3D'C';
    Heap[13]:=3D'D';
    Heap[14]:=3D'E';
    Heap[15]:=3D'F';

    Heap[16]:=3D'c';
    Heap[17]:=3D'h';
    Heap[18]:=3D'a';
    Heap[19]:=3D'r';
    Heap[20]:=3D char(0);

    Heap[21]:=3D'b';
    Heap[22]:=3D'y';
    Heap[23]:=3D't';
    Heap[24]:=3D'e';
    Heap[25]:=3D char(0);

    Heap[26]:=3D'w';
    Heap[27]:=3D'o';
    Heap[28]:=3D'r';
    Heap[29]:=3D'd';
    Heap[30]:=3D char(0);

    Heap[31]:=3D'b';
    Heap[32]:=3D'e';
    Heap[33]:=3D'g';
    Heap[34]:=3D'i';
    Heap[35]:=3D'n';
    Heap[36]:=3D char(0);

    Heap[37]:=3D'i';
    Heap[38]:=3D'f';
    Heap[39]:=3D char(0);

    Heap[40]:=3D'w';
    Heap[41]:=3D'h';
    Heap[42]:=3D'i';
    Heap[43]:=3D'l';
    Heap[44]:=3D'e';
    Heap[45]:=3D char(0);

    Heap[46]:=3D'i';
    Heap[47]:=3D'n';
    Heap[48]:=3D'l';
    Heap[49]:=3D'i';
    Heap[50]:=3D'n';
    Heap[51]:=3D'e';
    Heap[52]:=3D char(0);

    Heap[53]:=3D'r';
    Heap[54]:=3D'e';
    Heap[55]:=3D't';
    Heap[56]:=3D'u';
    Heap[57]:=3D'r';
    Heap[58]:=3D'n';
    Heap[59]:=3D char(0);

    Heap[60]:=3D'e';
    Heap[61]:=3D'n';
    Heap[62]:=3D'd';
    Heap[63]:=3D char(0);

    Heap[64]:=3D'c';
    Heap[65]:=3D'.';
    Heap[66]:=3D'p';
    Heap[67]:=3D'r';
    Heap[68]:=3D'g';
    Heap[69]:=3D char(0);

    Heap[70]:=3D'c';
    Heap[71]:=3D'.';
    Heap[72]:=3D'c';
    Heap[73]:=3D'o';
    Heap[74]:=3D'm';
    Heap[75]:=3D char(0);
    nHeap   :=3D76;

    Name[ 0]:=3D16;
    Cls [ 0]:=3D 1;
    Size[ 0]:=3D 1;

    Name[ 1]:=3D21;
    Cls [ 1]:=3D 1;
    Size[ 1]:=3D 1;

    Name[ 2]:=3D26;
    Cls [ 2]:=3D 1;
    Size[ 2]:=3D 2;
    nName   :=3D 3;

    pStk    :=3D 0;
    nCode   :=3D 0;
    nData   :=3D 16640;
  end


  word  Push(word V) is
    Stk[pStk]:=3DV;
    pStk:=3DpStk+1;
  end


  word  Pop () is
    pStk:=3DpStk-1;
    return Stk[pStk];
  end


  word  putn(word N) is
    pStk:=3D0;
    while    N!=3D0 do
      Push  (mod(N,10));
      N    :=3Ddiv(N,10);
    end

    while pStk!=3D0 do
      putc(char(Pop()+48));
    end
  end


  word  Stop() is
    putn (nLine);
    close();
    halt ();
  end


  word  val () is
    word E:=3D10;
    word I:=3D 0;
    if Buff[0]=3D'0' then
      if Buff[1]=3D'x' then
        E:=3D16;
        I:=3D 2;
      end
    end

    word N:=3D0;
    while Buff[I]!=3Dchar(0) do
      word K:=3D0;
      while Heap[K]!=3DBuff[I] do
        if K=3DE then
          Stop();
        end

        K:=3DK+1;
      end

      N:=3Dmul(E,N);
      N:=3DN+K;

      I:=3DI+1;
    end

    return N;
  end


  char  Look() is
    if pText>=3DnText then
      pText :=3D0;
      nText :=3Dread();
      if pText>=3DnText then
        return char(0);
      end
    end

    return     Text[pText];
  end


  char  Read() is
    char   Ch:=3DLook();
    if     Ch =3Dchar(10) then
      nLine  :=3DnLine+1;
    end

    pText    :=3DpText+1;

    putc  (Ch);

    return Ch;
  end


  word  isalnum() is
    if 'A'<=3DLook() then
      if Look()<=3D'Z' then
        return 0;
      end
    end

    if 'a'<=3DLook() then
      if Look()<=3D'z' then
        return 0;
      end
    end

    if '0'<=3DLook() then
      if Look()<=3D'9' then
        return 0;
      end
    end

    return     1;
  end


  word  Digraph(char C1, char C2) is
    if Buff[0]=3DC1 then
      if Look()=3DC2 then
        Buff[1]:=3DRead();
        Buff[2]:=3Dchar(0);
      end
    end
  end


  char  Scan() is
    word  pBuff:=3D0;
    while pBuff =3D0 do
      word  sFlag:=3D0;
      while sFlag =3D0 do
        if Look()!=3Dchar( 9) then
          if Look()!=3Dchar(10) then
            if Look()!=3Dchar(13) then
              if Look()!=3Dchar(32) then
                sFlag:=3D1;
              end
            end
          end
        end

        if sFlag=3D0 then
          Read();
        end
      end

      while isalnum()=3D0 do
        Buff[pBuff]:=3D Read();
        pBuff      :=3DpBuff+1;
      end

      if pBuff=3D0 then
        Buff[pBuff]:=3D Read();
        pBuff      :=3DpBuff+1;
      end

      Buff[pBuff]  :=3Dchar(0);

      Digraph('<', '=3D');
      Digraph('!', '=3D');
      Digraph('>', '=3D');
      Digraph(':', '=3D');

      if Buff[0]=3D'/' then
        if Look()=3D'/' then
          while Look()!=3Dchar(10) do
            if Read()=3Dchar(0) then
              Stop();
            end
          end

          pBuff:=3D0;
        end
      end
    end
  end


  word  Comp(word pHeap) is
    word pBuff:=3D0;
    while Buff[pBuff]=3DHeap[pHeap] do
      if Buff[pBuff]=3Dchar(0) then
        return 0;
      end

      pHeap:=3DpHeap+1;
      pBuff:=3DpBuff+1;
    end

    return     1;
  end


  word  Find(word fFlag) is
    word  pName:=3D0;
    while pName< nName do
      if Comp(Name[pName])=3D0 then
        return pName;
      end

      pName:=3DpName+1;
    end

    if fFlag=3D0 then
      Stop();
    end

    return     pName;
  end


  word  Emi2(word W) is
    Code[nCode]:=3DW;
    nCode:=3DnCode+1;
  end


  word  Emi3(word P, word W) is
  //TODO
    Code[P]    :=3DW;
  end


  word  Assign(word I) is
    if Size[I]>1 then
      Emi2(0x1581);          // 012601 // mov  (SP)+, R1

      if Size[Type[I]]=3D1 then
        Emi2(0x9031);        // 110061 // movb R0, Adr(R1)
      end

      if Size[Type[I]]=3D2 then
        Emi2(0x1031);        // 010061 // mov  R0, Adr(R1)
      end
    end

    if Size[I]=3D1 then
      if Size[Type[I]]=3D1 then
        Emi2(0x901F);        // 110037 // movb R0, @#Adr
      end

      if Size[Type[I]]=3D2 then
        Emi2(0x101F);        // 010037 // mov  R0, @#Adr
      end
    end

    Emi2(Ofs[I]);
  end


  word  Expr() is
    word eFlag:=3D0;
  //if   eFlag =3D0 then
      if '0'<=3DBuff[0] then
        if Buff[0]<=3D'9' then
          Emi2(0x15C0);      // 012700 // mov  #Val, R0
          Emi2(val());

          eFlag:=3D1;
        end
      end

      if Buff[0]=3D''' then
      //TODO 128..255
        Emi2(0x15C0);        // 012700 // mov  #Val, R0
        Emi2(word(Read()));

        Read();

        eFlag:=3D1;
      end

      if Buff[0]=3D'(' then
        Scan();
        Expr();

        eFlag:=3D1;
      end
  //end

    if   eFlag =3D0 then
      word   I:=3DFind(0);
      if Cls[I]=3D1 then
        Push(I);
        Scan();              // (
        Scan();
        Expr();
        I:=3DPop();
      end

      if Cls[I]=3D2 then
        if Size[I]>1 then
          Push(I);
          Scan();            // [
          Scan();
          Expr();
          I:=3DPop();

          if Size[Type[I]]=3D1 then
            Emi2(0x9C00);    // 116000 // movb Adr(R0), R0
          end

          if Size[Type[I]]=3D2 then
            Emi2(0x0CC0);    // 006300 // asl  R0

            Emi2(0x1C00);    // 016000 // mov  Adr(R0), R0
          end
        end

        if Size[I]=3D1 then
          if Size[Type[I]]=3D1 then
            Emi2(0x97C0);    // 113700 // movb @#Adr, R0
          end

          if Size[Type[I]]=3D2 then
            Emi2(0x17C0);    // 013700 // mov  @#Adr, R0
          end
        end

        Emi2(Ofs[I]);
      end

      if Cls[I]=3D3 then
        Scan();              // (

        Push(I);

        Sub[nName]:=3D 0;

        word J:=3DI+1;
        while Sub[J]=3D1 do
          Push(J);
          Scan();
          Expr();
          J:=3DPop();

          Assign(J);

          J:=3DJ+1;
        end

        I:=3DPop();
        if J=3DI+1 then
          Scan();            // )
        end

        word W:=3D(0xFFFF-(((nCode+nCode)+4)-Ofs[I]))+1;
        Emi2(0x09F7);        // 004767 // jsr  Ofs
        Emi2(W);
      end
    end

    Scan();

    word I:=3D0;
    if Buff[0]=3D'+' then
      I:=3D1;
    end

    if Buff[0]=3D'-' then
      I:=3D2;
    end

    if   I!=3D0 then
      Emi2(0x1026);          // 010046 // mov  R0, -(SP)

      Push(I);
      Scan();
      Expr();
      I:=3DPop();

      if I=3D1 then
        Emi2(0x1581);        // 012601 // mov  (SP)+, R1

        Emi2(0x6040);        // 060100 // add  R0, R1
      end

      if I=3D2 then
        Emi2(0x1001);        // 010001 // mov  R0, R1

        Emi2(0x1580);        // 012600 // mov  (SP)+, R0

        Emi2(0xE040);        // 160100 // sub  R0, R1
      end
    end
  end


  word  Cond() is
    Scan();
    Expr();

  //TODO
    word jCode:=3D0;
    if Buff[0]=3D'<' then
      jCode:=3D0x8700;         // 1034XX // blo  Ofs
      if Buff[1]=3D'=3D' then
        jCode:=3D0x8300;       // 1014XX // blos Ofs
      end
    end

    if Buff[0]=3D'=3D' then
      jCode:=3D0x0300;         // 0014XX // beq   Ofs
    end

    if Buff[0]=3D'!' then
      jCode:=3D0x0200;         // 0010XX // bne  Ofs
    end

    if Buff[0]=3D'>' then
      jCode:=3D0x8200;         // 1010XX // bhi  Ofs
      if Buff[1]=3D'=3D' then
        jCode:=3D0x8600;       // 1030XX // bhis Ofs
      end
    end

    if jCode=3D0 then
      Stop();
    end

    Emi2(0x1026);            // 010046 // mov  R0, -(SP)

    Scan();
    Expr();

    Emi2(0x1581);            // 012601 // mov  (SP)+, R1

    Emi2(0xE001);            // 160001 // sub  R1, R0

    Emi2(jCode+2);           // bxx  2
  end


  word  Obj (word T) is
    if Cls[T]!=3D1 then
      Stop();
    end

    Name[nName]:=3DnHeap;
    Type[nName]:=3D T;

    Scan();
    if Find(1)<nName then
      Stop();
    end

    word pBuff:=3D0;
    char  Ch  :=3Dchar(1);
    while Ch  !=3Dchar(0) do
      Ch         :=3D Buff[pBuff];
      Heap[nHeap]:=3D Ch;
      nHeap      :=3DnHeap+1;
      pBuff      :=3DpBuff+1;
    end

    Scan();

    return nName;
  end


  char  Var (word Subclass) is
    Cls [nName]:=3D 2;
    Sub [nName]:=3D Subclass;
    Size[nName]:=3D 1;
    Ofs [nName]:=3DnData;

    if Buff[0]=3D'[' then
      if Subclass!=3D0 then
        Stop();
      end

      Scan();
      Size[nName]:=3Dval();
      Scan();                // ]
      Scan();                // ;
    end

    nData      :=3DnData+(mul(Size[Type[nName]],Size[nName]));
    if mod(nData,2)!=3D0 then
      nData    :=3DnData+1;
    end

    nName      :=3DnName+1;

    return Buff[0];
  end


  word  Hide() is
    word  I:=3DPop();
    while I< nName do
      Heap[Name[I]]:=3Dchar(0);
      I :=3DI+1;
    end
  end


  word rFlag;

  word  Ctrl() is
    word cFlag:=3D0;
  //if   cFlag =3D0 then
      if Comp(37)=3D0 then     // if
        Cond();

        Push(nCode);

        Emi2(0x0077);        // 000167 // jmp  ?
        nCode:=3DnCode+1;

        Push(nName);

        Scan();
        Ctrl();
        while Comp(60)!=3D0 do // !end
          Ctrl();
        end

        Hide();

        word pSkip:=3DPop();
        Emi3(pSkip+1, (nCode+nCode)-((pSkip+pSkip)+4));

        rFlag:=3D1;            // 14.05.2006
        cFlag:=3D1;
      end
  //end

    if   cFlag =3D0 then
      if Comp(40)=3D0 then     // while
        Push(nCode);

        Cond();

        Push(nCode);

        Emi2(0x0077);        // 000167 // jmp  ?
        nCode:=3DnCode+1;

        Push(nName);

        Scan();
        Ctrl();
        while Comp(60)!=3D0 do // !end
          Ctrl();
        end

        Hide();

        word pExit:=3DPop();
        word pLoop:=3DPop();

        Emi2(0x0077);        // 000167 // jmp  Ofs
        Emi2((0xFFFF-((nCode+nCode+2)-(pLoop+pLoop)))+1);

        Emi3(pExit+1, (nCode+nCode)-((pExit+pExit)+4));

        rFlag:=3D1;            // 14.05.2006
        cFlag:=3D1;
      end
    end

    if   cFlag =3D0 then
      if Comp(46)=3D0 then     // inline
        Buff[0]:=3D',';
        while Buff[0]=3D',' do
          Scan();
          Emi2(val());       // dw   Val

          Scan();
        end

        rFlag:=3D1;            // 14.05.2006
        cFlag:=3D1;
      end
    end

    if   cFlag =3D0 then
      if Comp(53)=3D0 then     // return
        Scan();
        Expr();

        Emi2(0x0087);        // 000207 // rts

        rFlag:=3D0;            // 14.05.2006
        cFlag:=3D1;
      end
    end

    if   cFlag =3D0 then
      word   I:=3DFind(0);
      if Cls[I]=3D1 then
        word N:=3DObj(I);
        if   Var(2)=3D':' then
          Scan();
          Expr();

          Assign(N);
        end
      end

      if Cls[I]=3D2 then
        if Size[I]>1 then
          Scan();            // [
          Scan();
          Expr();

          if Size[Type[I]]=3D2 then
            Emi2(0x0CC0);    // 006300 // asl  R0
          end

          Emi2(0x1026);      // 010046 // mov  R0, -(SP)
        end

        Scan();              // :=3D
        Scan();
        Expr();

        Assign(I);
      end

      if Cls[I]=3D3 then
        Expr();
      end

      rFlag:=3D1;              // 14.05.2006
    end

    Scan();
  end


  word  Func(word Rts) is
    Scan();
    Ctrl();
    while Comp(60)!=3D0 do     // !end
      Ctrl();
    end

    if rFlag!=3D0 then         // 14.05.2006 // if rFlag=3D0 then
    //Emi2(0x0087);          // 000207 // rts
      Emi2(Rts);
    end
  end


  begin
    Init();

    hFile:=3Dopen();
    pText:=3D0;
    nText:=3D0;
    nLine:=3D1;

    Emi2(0x0077);            // 000167 // jmp  ?
    nCode:=3DnCode+1;

    Scan();
    while Comp(31)!=3D0 do     // !begin
      Obj (Find(0));
      char Ch:=3DBuff[0];
      if   Ch =3D'(' then
        Cls [nName]:=3D 3;
        Sub [nName]:=3D 0;
        Ofs [nName]:=3DnCode+nCode;
        nName      :=3DnName+1;

        Push(nName);

        Scan();
        if Buff[0]!=3D')' then
          Obj (Find(0));
          while Var(1)=3D',' do
            Scan();
            Obj (Find(0));
          end
        end

        Scan();              // is
        Func(0x0087);
        Hide();
      end

      if   Ch!=3D'(' then
        Var(0);
      end

      Scan();
    end

    Emi3 (1, (nCode+nCode)-4);
    Func (0x0000);

    close();

    hFile:=3Dcreate();
    write();
    close();
  end
</xmp>
<p>
<a name=3D"int21"></a></p><h4><a name=3D"int21">=D1=84=D1=83=D0=BD=D0=BA=D1=
=86=D0=B8=D0=B8 =D0=B2=D0=B2=D0=BE=D0=B4=D0=B0-=D0=B2=D1=8B=D0=B2=D0=BE=D0=
=B4=D0=B0 =D0=B4=D0=BB=D1=8F =D0=BA=D1=80=D0=BE=D1=81=D1=81-=D0=BA=D0=BE=D0=
=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=D0=BE=D1=80=D0=B0:</a></h4>
<p>
</p><xmp>
  word  open() is
    inline      0xB4, 0x3D;              // mov  AH, 3DH
    inline      0xB0, 0x00;              // mov  AL, 00H
    inline      0xBA, 0x4A, 0xC1;        // mov  DX, @@Data+Ofs(Heap[64])
    inline      0xCD, 0x21;              // int  21H
  end


  word  create() is
    inline      0xB4, 0x3C;              // mov  AH, 03CH
    inline      0xB9, 0x00, 0x00;        // mov  CX, 00H
    inline      0xBA, 0x50, 0xC1;        // mov  DX, @@Data+Ofs(Heap[70])
    inline      0xCD, 0x21;              // int  21H
  end


  word  read() is
    inline      0xB4, 0x3F;              // mov  AH, 3FH
    inline      0x8B, 0x1E, 0x08, 0xC1;  // mov  BX, word [@@DATA+Ofs(hFile=
)]
    inline      0xB9, 0x00, 0x40;        // mov  CX, 16384
    inline      0xBA, 0x00, 0x41;        // mov  DX, @@DATA+Ofs(Text)
    inline      0xCD, 0x21;              // int  21H
  end


  word  write() is
    inline      0xB4, 0x40;              // mov  AH, 40H
    inline      0x8B, 0x1E, 0x08, 0xC1;  // mov  BX, word [@@DATA+Ofs(hFile=
)]
    inline      0x8B, 0x0E, 0x06, 0xC1;  // mov  CX, word [@@DATA+Ofs(nCode=
)]
    inline      0x03, 0xC9;              // add  CX, CX
    inline      0xBA, 0x06, 0x81;        // mov  DX, @@DATA+Ofs(Code)
    inline      0xCD, 0x21;              // int  21H
  end


  word  close() is
    inline      0xB4, 0x3E;              // mov  AH, 3EH
    inline      0x8B, 0x1E, 0x08, 0xC1;  // mov  BX, word [@@DATA+Ofs(hFile=
)]
    inline      0xCD, 0x21;              // int  21H
  end


  char  putc(char C) is
    char        C1:=3DC;
    inline      0x92;                    // xchg DX, AX
    inline      0xB4, 0x02;              // mov  AH, 2
    inline      0xCD, 0x21;              // int  21H
  end


  word  halt() is
    inline      0xB8, 0x00, 0x4C;        // mov  AX, 4C00H
    inline      0xCD, 0x21;              // int  21H
  end
</xmp>
<p>
=D0=94=D0=BB=D1=8F =D0=B7=D0=B0=D0=B3=D1=80=D1=83=D0=B7=D0=BA=D0=B8 =D0=BA=
=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=D0=BE=D1=80=D0=B0 =D0=B2 =D0=BF=
=D0=B0=D0=BC=D1=8F=D1=82=D1=8C =D0=B8=D1=81=D0=BF=D0=BE=D0=BB=D1=8C=D0=B7=
=D1=83=D0=B5=D1=82=D1=81=D1=8F =D0=B2=D0=B2=D0=BE=D0=B4=D0=B8=D0=BC=D0=B0=
=D1=8F =D1=81 =D0=BF=D1=83=D0=BB=D1=8C=D1=82=D0=B0 =D0=BF=D1=80=D0=BE=D0=B3=
=D1=80=D0=B0=D0=BC=D0=BC=D0=B0
(=D0=B2 =D0=BF=D0=B0=D0=BC=D1=8F=D1=82=D1=8C =D1=8D=D0=BC=D1=83=D0=BB=D1=8F=
=D1=82=D0=BE=D1=80=D0=B0 =D0=BE=D0=BD=D0=B0 =D0=B2=D0=B2=D0=BE=D0=B4=D0=B8=
=D1=82=D1=81=D1=8F =D1=81 =D0=BF=D0=BE=D0=BC=D0=BE=D1=89=D1=8C=D1=8E =D0=BA=
=D0=BE=D0=BC=D0=B0=D0=BD=D0=B4 deposit, =D1=87=D1=82=D0=BE=D0=B1=D1=8B =D0=
=BD=D0=B5 =D0=B2=D0=B2=D0=BE=D0=B4=D0=B8=D1=82=D1=8C
=D0=B5=D0=B5 =D0=BF=D0=BE=D0=B2=D1=82=D0=BE=D1=80=D0=BD=D0=BE, =D0=B2=D1=81=
=D0=B5 =D0=BA=D0=BE=D0=BC=D0=B0=D0=BD=D0=B4=D1=8B =D1=81=D0=BB=D0=B5=D0=B4=
=D1=83=D0=B5=D1=82 =D0=BF=D0=BE=D0=BC=D0=B5=D1=81=D1=82=D0=B8=D1=82=D1=8C =
=D0=B2 =D1=84=D0=B0=D0=B9=D0=BB pdp11.ini):
</p><p>
</p><xmp>
  ;mov    #177550, R1
  deposit 137742 012701
  deposit 137744 177550
  ;mov    #000400, R2
  deposit 137746 012702
  deposit 137750 000400
  ;inc    (R1)
  deposit 137752 005211
  ;bit    #100200, (R1)   =20
  deposit 137754 032711
  deposit 137756 100200
  ;bmi    137776
  deposit 137760 100406
  ;beq    137752
  deposit 137762 001774
  ;movb   2(R1), 0(R2)
  deposit 137764 116162
  deposit 137766 000002
  deposit 137770 000000
  ;inc    R2
  deposit 137772 005202
  ;br     ;137752
  deposit 137774 000766
  ;halt
  deposit 137776 000000
</xmp>
<p>
=D0=97=D0=B0=D1=82=D0=B5=D0=BC "=D0=B2=D1=81=D1=82=D0=B0=D0=B2=D0=B8=D1=82=
=D1=8C =D0=BF=D0=B5=D1=80=D1=84=D0=BE=D0=BB=D0=B5=D0=BD=D1=82=D1=83" =D1=81=
 =D0=B8=D1=81=D0=BF=D0=BE=D0=BB=D0=BD=D1=8F=D0=B5=D0=BC=D1=8B=D0=BC =D0=BA=
=D0=BE=D0=B4=D0=BE=D0=BC =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=
=D0=BE=D1=80=D0=B0 =D0=B8 =D0=B7=D0=B0=D0=B3=D1=80=D1=83=D0=B7=D0=B8=D1=82=
=D1=8C =D0=B5=D0=B3=D0=BE =D0=B2 =D0=BF=D0=B0=D0=BC=D1=8F=D1=82=D1=8C
=D0=BD=D0=B0=D1=87=D0=B8=D0=BD=D0=B0=D1=8F =D1=81 =D0=B0=D0=B4=D1=80=D0=B5=
=D1=81=D0=B0 000400 (0x100):
</p><p>
</p><xmp>
  attach PTR C.COM
  go 137742
</xmp>
<p>
"=D0=92=D1=81=D1=82=D0=B0=D0=B2=D0=B8=D1=82=D1=8C =D0=BF=D0=B5=D1=80=D1=84=
=D0=BE=D0=BB=D0=B5=D0=BD=D1=82=D1=83" =D1=81 =D1=82=D0=B5=D0=BA=D1=81=D1=82=
=D0=BE=D0=BC =D0=BA=D0=BE=D0=BC=D0=BF=D0=B8=D0=BB=D0=B8=D1=80=D1=83=D0=B5=
=D0=BC=D0=BE=D0=B9 =D0=BF=D1=80=D0=BE=D0=B3=D1=80=D0=B0=D0=BC=D0=BC=D1=8B, =
=D1=87=D0=B8=D1=81=D1=82=D1=83=D1=8E =D0=BF=D0=B5=D1=80=D1=84=D0=BE=D0=BB=
=D0=B5=D0=BD=D1=82=D1=83
=D0=B4=D0=BB=D1=8F =D0=B2=D1=8B=D0=B2=D0=BE=D0=B4=D0=B0 =D0=BA=D0=BE=D0=B4=
=D0=B0, =D1=83=D1=81=D1=82=D0=B0=D0=BD=D0=BE=D0=B2=D0=B8=D1=82=D1=8C =D0=B7=
=D0=BD=D0=B0=D1=87=D0=B5=D0=BD=D0=B8=D0=B5 =D1=83=D0=BA=D0=B0=D0=B7=D0=B0=
=D1=82=D0=B5=D0=BB=D1=8F =D1=81=D1=82=D0=B5=D0=BA=D0=B0 (=D0=BF=D0=B5=D1=80=
=D0=B5=D0=B4 =D0=B7=D0=B0=D0=B3=D1=80=D1=83=D0=B7=D1=87=D0=B8=D0=BA=D0=BE=
=D0=BC,
=D0=B5=D1=81=D0=BB=D0=B8 =D0=B7=D0=B0=D0=B3=D1=80=D1=83=D0=B7=D1=87=D0=B8=
=D0=BA =D0=B1=D0=BE=D0=BB=D1=8C=D1=88=D0=B5 =D0=BD=D0=B5 =D0=BD=D1=83=D0=B6=
=D0=B5=D0=BD, =D0=BC=D0=BE=D0=B6=D0=BD=D0=BE =D1=83=D1=81=D1=82=D0=B0=D0=BD=
=D0=BE=D0=B2=D0=B8=D1=82=D1=8C =D0=B7=D0=BD=D0=B0=D1=87=D0=B5=D0=BD=D0=B8=
=D0=B5 137776)
=D0=B8 =D0=B7=D0=B0=D0=BF=D1=83=D1=81=D1=82=D0=B8=D1=82=D1=8C =D0=BA=D0=BE=
=D0=BC=D0=BF=D0=B8=D0=BB=D1=8F=D1=82=D0=BE=D1=80:
</p><p>
</p><xmp>
  attach PTR C.PRG
  attach PTP C.BIN
  deposit SP 137740
  go 400
</xmp>
<p>
=D0=95=D1=81=D0=BB=D0=B8 =D0=BD=D0=B5=D1=82 =D0=BE=D1=88=D0=B8=D0=B1=D0=BE=
=D0=BA, =D0=BD=D0=B0 =D0=BF=D0=B5=D1=80=D1=84=D0=BE=D0=BB=D0=B5=D0=BD=D1=82=
=D1=83 (=D0=B2 =D1=84=D0=B0=D0=B9=D0=BB C.BIN) =D0=B1=D1=83=D0=B4=D0=B5=D1=
=82 =D0=B2=D1=8B=D0=B2=D0=B5=D0=B4=D0=B5=D0=BD =D1=81=D0=BE=D0=B7=D0=B4=D0=
=B0=D0=BD=D0=BD=D1=8B=D0=B9 =D0=BA=D0=BE=D0=B4.
</p><p>
</p><center>
<!--Openstat-->
<span id=3D"openstat71556"></span>

<!--/Openstat-->
<!-- Rating@Mail.ru counter -->
<a href=3D"http://top.mail.ru/jump?from=3D74739" target=3D"_blank"><img src=
=3D"http://top-fwz1.mail.ru/counter?id=3D74739;t=3D239;js=3D13;r=3Dhttp%3A/=
/www.avhohlov.narod.ru/p1800ru.htm;s=3D1536*864;_=3D0.10354694925782182" bo=
rder=3D"0" height=3D"31" width=3D"88" alt=3D"=D0=A0=D0=B5=D0=B9=D1=82=D0=B8=
=D0=BD=D0=B3@Mail.ru" hleatlppj=3D""></a>
<!-- //Rating@Mail.ru counter -->
</center>
<br>
<!-- copyright (t2) --><div align=3D"center">=D0=A1=D0=B0=D0=B9=D1=82 =D1=
=81=D0=BE=D0=B7=D0=B4=D0=B0=D0=BD =D0=B2 =D1=81=D0=B8=D1=81=D1=82=D0=B5=D0=
=BC=D0=B5 <a href=3D"http://www.ucoz.ru/" title=3D"=D0=A1=D0=BE=D0=B7=D0=B4=
=D0=B0=D1=82=D1=8C =D1=81=D0=B0=D0=B9=D1=82 =D0=B1=D0=B5=D1=81=D0=BF=D0=BB=
=D0=B0=D1=82=D0=BD=D0=BE">uCoz</a><br></div><!-- /copyright -->



</body></html>
------MultipartBoundary--iuRrG5bpiFSzLfauicwEgLuv3caqjR4bxi3s9Nnqqa------
